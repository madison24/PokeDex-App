let pokemonRepository = (function () {
  let e = [];
  function t(t) {
    "object" == typeof t && "name" in t && "detailsUrl" in t
      ? e.push(t)
      : console.log("pokemon is not correct");
  }
  function i() {
    return e;
  }
  function a(e) {
    r(e);
  }
  function r(e) {
    return fetch(e.detailsUrl)
      .then(function (e) {
        return e.json();
      })
      .then(function (t) {
        var i;
        (e.imageUrl = t.sprites.front_default),
          (e.height = t.height),
          (e.weight = t.weight),
          (e.types = []);
        for (let a = 0; a < t.types.length; a++)
          e.types.push(t.types[a].type.name);
        e.abilities = [];
        for (let r = 0; r < t.abilities.length; r++)
          e.abilities.push(t.abilities[r].ability.name);
        let n, l, o, s, m, d, c, u;
        (i = e),
          (n = $(".modal-body")),
          (l = $(".modal-title")),
          l.empty(),
          n.empty(),
          (o = $("<h1>" + i.name + "</h1>")),
          (s = $('<img class="modal-img">')),
          s.attr("src", i.imageUrl),
          (m = $("<p>Height: " + i.height + "</p>")),
          (d = $("<p>Weight: " + i.weight + "</p>")),
          (c = $("<p>Types: " + i.types.join(", ") + "</p>")),
          (u = $("<p>Abilities: " + i.abilities.join(", ") + "</p>")),
          c.addClass("arrary-item"),
          u.addClass("arrary-item"),
          l.append(o),
          n.append(s),
          n.append(m),
          n.append(d),
          n.append(c),
          n.append(u);
      })
      .catch(function (e) {
        console.error(e);
      });
  }
  return {
    add: t,
    getAll: i,
    loadList: function e() {
      return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
        .then(function (e) {
          return e.json();
        })
        .then(function (e) {
          e.results.forEach(function (e) {
            t({ name: e.name, detailsUrl: e.url });
          });
        })
        .catch(function (e) {
          console.error(e);
        });
    },
    loadDetails: r,
    addListItem: function e(t) {
      let i = document.querySelector(".pokemon-list"),
        a = document.createElement("li"),
        n = document.createElement("button");
      a.classList.add("list-group-item", "bg-transparent", "border-0"),
        n.classList.add("btn", "btn-lg", "button-custom"),
        (n.innerText = t.name),
        n.setAttribute("data-target", "#modal-container"),
        n.setAttribute("data-toggle", "modal"),
        a.appendChild(n),
        i.appendChild(a),
        n.addEventListener("click", () => {
          var e;
          (e = t), r(e);
        });
    },
    showDetails: a,
  };
})();
function hideModal() {
  document.querySelector("#modal-container").classList.remove("is-visible");
}
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (e) {
    pokemonRepository.addListItem(e);
  });
});
let nameError = document.getElementById("name-error"),
  emailError = document.getElementById("email-error"),
  messageError = document.getElementById("message-error"),
  sumbitError = document.getElementById("sumbit-error");
function validateName() {
  let e = document.getElementById("contact-name").value;
  return 0 == e.length
    ? ((nameError.innerHTML = "Name is required"), !1)
    : e.match(/^[A-Za-z]*\s{1}[A-Za-z]*$/)
    ? ((nameError.innerHTML = '<i class="fa-solid fa-check"></i>'), !0)
    : ((nameError.innerHTML = "Write full name"), !1);
}
function validateEmail() {
  let e = document.getElementById("contact-email").value;
  return 0 == e.length
    ? ((emailError.innerHTML = "Email is required"), !1)
    : e.match(/^[A-Za-z0-9_!#$%&'*+\/=?`{|}~^.-]+@[A-Za-z0-9.-]+$/gm)
    ? ((emailError.innerHTML = '<i class="fa-solid fa-check"></i>'), !0)
    : ((emailError.innerHTML = "Email Invalid"), !1);
}
function validateMessage() {
  let e,
    t = 15 - document.getElementById("contact-message").value.length;
  return t > 0
    ? ((messageError.innerHTML = t + "more characters required"), !1)
    : ((messageError.innerHTML = '<i class="fa-solid fa-check"></i>'), !0);
}
function validateForm() {
  return validateName() && validateEmail() && validateMessage()
    ? validateName() && validateEmail() && validateMessage()
      ? (alert("Message sent!"), !0)
      : void 0
    : ((sumbitError.style.display = "block"),
      (sumbitError.innerHTML = "Please fix error to sumbit"),
      setTimeout(function () {
        sumbitError.style.display = "none";
      }, 3e3),
      !1);
}
